{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspace/frontend-chiro-store/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function formatCurrency(amount: number): string {\n  return new Intl.NumberFormat('id-ID', {\n    style: 'currency',\n    currency: 'IDR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  }).format(amount)\n}\n\nexport function formatNumber(num: number): string {\n  return new Intl.NumberFormat('id-ID').format(num)\n}\n\nexport function getStatusColor(status: number): string {\n  switch (status) {\n    case 1:\n      return 'text-green-600 bg-green-50'\n    case 2:\n      return 'text-red-600 bg-red-50'\n    case 3:\n      return 'text-yellow-600 bg-yellow-50'\n    case 4:\n      return 'text-blue-600 bg-blue-50'\n    default:\n      return 'text-gray-600 bg-gray-50'\n  }\n}\n\nexport function getStatusText(status: number): string {\n  switch (status) {\n    case 1:\n      return 'Ready'\n    case 2:\n      return 'Cancelled'\n    case 3:\n      return 'Resend'\n    case 4:\n      return 'Complete'\n    default:\n      return 'Unknown'\n  }\n}\n\nexport function getOperatorColor(operator: string): string {\n  switch (operator.toLowerCase()) {\n    case 'telkomsel':\n      return 'text-red-600 bg-red-50'\n    case 'indosat':\n      return 'text-yellow-600 bg-yellow-50'\n    case 'axis':\n      return 'text-purple-600 bg-purple-50'\n    default:\n      return 'text-gray-600 bg-gray-50'\n  }\n}"],"names":[],"mappings":";;;;;;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEO,SAAS,eAAe,MAAc;IAC3C,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;QACpC,OAAO;QACP,UAAU;QACV,uBAAuB;QACvB,uBAAuB;IACzB,GAAG,MAAM,CAAC;AACZ;AAEO,SAAS,aAAa,GAAW;IACtC,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS,MAAM,CAAC;AAC/C;AAEO,SAAS,eAAe,MAAc;IAC3C,OAAQ;QACN,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF;AAEO,SAAS,cAAc,MAAc;IAC1C,OAAQ;QACN,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF;AAEO,SAAS,iBAAiB,QAAgB;IAC/C,OAAQ,SAAS,WAAW;QAC1B,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///workspace/frontend-chiro-store/src/components/ui/tabs.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;;;;;AAEA,MAAM,OAAO,mKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,mKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file:///workspace/frontend-chiro-store/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///workspace/frontend-chiro-store/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }"],"names":[],"mappings":";;;;;AACA;AACA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 298, "column": 0}, "map": {"version":3,"sources":["file:///workspace/frontend-chiro-store/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, ...props }, ref) => {\n    return (\n      <button\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IACvC,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["file:///workspace/frontend-chiro-store/src/components/ui/select.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n}"],"names":[],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AACA;;;;;;AAEA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mTACA;QAED,GAAG,KAAK;;YAER;0BACD,6LAAC,qKAAA,CAAA,OAAoB;gBAAC,OAAO;0BAC3B,cAAA,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;;AAI7B,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,qCAAuB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG1C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,iBAA8B;QAC7B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,mNAAA,CAAA,YAAS;YAAC,WAAU;;;;;;;;;;;MAZnB;AAeN,qBAAqB,WAAW,GAAG,qKAAA,CAAA,iBAA8B,CAAC,WAAW;AAE7E,MAAM,uCAAyB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG5C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,mBAAgC;QAC/B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uNAAA,CAAA,cAAW;YAAC,WAAU;;;;;;;;;;;MAZrB;AAeN,uBAAuB,WAAW,GAChC,qKAAA,CAAA,mBAAgC,CAAC,WAAW;AAE9C,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACzD,6LAAC,qKAAA,CAAA,SAAsB;kBACrB,cAAA,6LAAC,qKAAA,CAAA,UAAuB;YACtB,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ucACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;;8BAET,6LAAC;;;;;8BACD,6LAAC,qKAAA,CAAA,WAAwB;oBACvB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,6LAAC;;;;;;;;;;;;;;;;;AAIP,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,0CAA0C;QACvD,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,qKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6NACA;QAED,GAAG,KAAK;;0BAET,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC,qKAAA,CAAA,gBAA6B;8BAC5B,cAAA,6LAAC,uMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAIrB,6LAAC,qKAAA,CAAA,WAAwB;0BAAE;;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,qKAAA,CAAA,OAAoB,CAAC,WAAW;AAEzD,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,YAAyB;QACxB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG,qKAAA,CAAA,YAAyB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 574, "column": 0}, "map": {"version":3,"sources":["file:///workspace/frontend-chiro-store/src/lib/api.ts"],"sourcesContent":["import { \n  ApiResponse, \n  ServicesResponse, \n  Order, \n  OrderRequest, \n  SetStatusRequest, \n  PricingInfo, \n  HealthCheck \n} from '@/types'\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'https://minatoz997-chirostore.hf.space'\n\nclass ApiService {\n  private async request<T>(\n    endpoint: string, \n    options: RequestInit = {}\n  ): Promise<ApiResponse<T>> {\n    try {\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...options.headers,\n        },\n        ...options,\n      })\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`)\n      }\n\n      const data = await response.json()\n      return data\n    } catch (error) {\n      console.error('API request failed:', error)\n      return {\n        success: false,\n        message: error instanceof Error ? error.message : 'Unknown error occurred',\n      }\n    }\n  }\n\n  async getServices(): Promise<ApiResponse<ServicesResponse>> {\n    return this.request<ServicesResponse>('/services')\n  }\n\n  async createOrder(orderData: OrderRequest): Promise<ApiResponse<Order>> {\n    return this.request<Order>('/order', {\n      method: 'POST',\n      body: JSON.stringify(orderData),\n    })\n  }\n\n  async getActiveOrders(): Promise<ApiResponse<Order[]>> {\n    return this.request<Order[]>('/active-orders')\n  }\n\n  async getOrderStatus(orderId: string): Promise<ApiResponse<Order>> {\n    return this.request<Order>(`/status/${orderId}`)\n  }\n\n  async updateOrderStatus(statusData: SetStatusRequest): Promise<ApiResponse<unknown>> {\n    return this.request('/status', {\n      method: 'PUT',\n      body: JSON.stringify(statusData),\n    })\n  }\n\n  async calculatePricing(originalPrice: number): Promise<ApiResponse<PricingInfo>> {\n    return this.request<PricingInfo>(`/pricing/${originalPrice}`)\n  }\n\n  async getHealthCheck(): Promise<ApiResponse<HealthCheck>> {\n    return this.request<HealthCheck>('/health')\n  }\n}\n\nexport const apiService = new ApiService()"],"names":[],"mappings":";;;AAUqB;AAArB,MAAM,eAAe,8EAAmC;AAExD,MAAM;IACJ,MAAc,QACZ,QAAgB,EAChB,UAAuB,CAAC,CAAC,EACA;QACzB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,eAAe,UAAU,EAAE;gBACzD,SAAS;oBACP,gBAAgB;oBAChB,GAAG,QAAQ,OAAO;gBACpB;gBACA,GAAG,OAAO;YACZ;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;YAC1D;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,uBAAuB;YACrC,OAAO;gBACL,SAAS;gBACT,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YACpD;QACF;IACF;IAEA,MAAM,cAAsD;QAC1D,OAAO,IAAI,CAAC,OAAO,CAAmB;IACxC;IAEA,MAAM,YAAY,SAAuB,EAA+B;QACtE,OAAO,IAAI,CAAC,OAAO,CAAQ,UAAU;YACnC,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;QACvB;IACF;IAEA,MAAM,kBAAiD;QACrD,OAAO,IAAI,CAAC,OAAO,CAAU;IAC/B;IAEA,MAAM,eAAe,OAAe,EAA+B;QACjE,OAAO,IAAI,CAAC,OAAO,CAAQ,CAAC,QAAQ,EAAE,SAAS;IACjD;IAEA,MAAM,kBAAkB,UAA4B,EAAiC;QACnF,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW;YAC7B,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;QACvB;IACF;IAEA,MAAM,iBAAiB,aAAqB,EAAqC;QAC/E,OAAO,IAAI,CAAC,OAAO,CAAc,CAAC,SAAS,EAAE,eAAe;IAC9D;IAEA,MAAM,iBAAoD;QACxD,OAAO,IAAI,CAAC,OAAO,CAAc;IACnC;AACF;AAEO,MAAM,aAAa,IAAI","debugId":null}},
    {"offset": {"line": 640, "column": 0}, "map": {"version":3,"sources":["file:///workspace/frontend-chiro-store/src/components/services-grid.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Loader2, ShoppingCart, TrendingUp } from 'lucide-react'\nimport { apiService } from '@/lib/api'\nimport { Service, OperatorType } from '@/types'\nimport { formatCurrency } from '@/lib/utils'\n\ninterface ServicesGridProps {\n  onOrderService: (service: Service, operator: OperatorType) => void\n}\n\nexport function ServicesGrid({ onOrderService }: ServicesGridProps) {\n  const [services, setServices] = useState<Service[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [selectedOperators, setSelectedOperators] = useState<Record<string, OperatorType>>({})\n\n  useEffect(() => {\n    loadServices()\n  }, [])\n\n  const loadServices = async () => {\n    try {\n      setLoading(true)\n      const response = await apiService.getServices()\n      \n      if (response.success && response.data?.data) {\n        setServices(response.data.data)\n        setError(null)\n      } else {\n        setError(response.message || 'Failed to load services')\n      }\n    } catch {\n      setError('Failed to load services')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleOperatorChange = (serviceId: string, operator: OperatorType) => {\n    setSelectedOperators(prev => ({\n      ...prev,\n      [serviceId]: operator\n    }))\n  }\n\n  const handleOrder = (service: Service) => {\n    const operator = selectedOperators[service.id] || 'any'\n    onOrderService(service, operator)\n  }\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center py-12\">\n        <Loader2 className=\"h-8 w-8 animate-spin\" />\n        <span className=\"ml-2\">Loading services...</span>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"text-center py-12\">\n        <p className=\"text-red-600 mb-4\">{error}</p>\n        <Button onClick={loadServices} variant=\"outline\">\n          Try Again\n        </Button>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n      {services.map((service) => (\n        <Card key={service.id} className=\"hover:shadow-lg transition-shadow\">\n          <CardHeader>\n            <div className=\"flex items-center justify-between\">\n              <CardTitle className=\"text-lg\">{service.name}</CardTitle>\n              <Badge variant=\"secondary\">ID: {service.id}</Badge>\n            </div>\n            <CardDescription>\n              Virtual phone number for {service.name}\n            </CardDescription>\n          </CardHeader>\n          \n          <CardContent className=\"space-y-4\">\n            {service.pricing && (\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600\">Original Price:</span>\n                  <span className=\"text-sm line-through text-gray-500\">\n                    {formatCurrency(service.pricing.original_price)}\n                  </span>\n                </div>\n                \n                <div className=\"flex justify-between items-center\">\n                  <span className=\"font-medium\">Selling Price:</span>\n                  <span className=\"text-lg font-bold text-green-600\">\n                    {formatCurrency(service.pricing.selling_price)}\n                  </span>\n                </div>\n                \n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600\">Profit:</span>\n                  <div className=\"flex items-center text-sm text-green-600\">\n                    <TrendingUp className=\"h-4 w-4 mr-1\" />\n                    {formatCurrency(service.pricing.profit)}\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"space-y-2\">\n              <label className=\"text-sm font-medium\">Select Operator:</label>\n              <Select\n                value={selectedOperators[service.id] || 'any'}\n                onValueChange={(value: OperatorType) => handleOperatorChange(service.id, value)}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Choose operator\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"any\">Any Operator</SelectItem>\n                  <SelectItem value=\"telkomsel\">Telkomsel</SelectItem>\n                  <SelectItem value=\"indosat\">Indosat</SelectItem>\n                  <SelectItem value=\"axis\">Axis</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <Button \n              onClick={() => handleOrder(service)}\n              className=\"w-full\"\n              size=\"lg\"\n            >\n              <ShoppingCart className=\"h-4 w-4 mr-2\" />\n              Order Now\n            </Button>\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1033, "column": 0}, "map": {"version":3,"sources":["file:///workspace/frontend-chiro-store/src/components/order-form.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Loader2, CheckCircle, XCircle } from 'lucide-react'\nimport { apiService } from '@/lib/api'\nimport { Service, OperatorType } from '@/types'\nimport { formatCurrency, getOperatorColor } from '@/lib/utils'\n\ninterface OrderFormProps {\n  service: Service\n  operator: OperatorType\n  onOrderComplete: () => void\n  onCancel: () => void\n}\n\nexport function OrderForm({ service, operator, onOrderComplete, onCancel }: OrderFormProps) {\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [success, setSuccess] = useState(false)\n\n  const handleSubmitOrder = async () => {\n    try {\n      setLoading(true)\n      setError(null)\n      \n      const response = await apiService.createOrder({\n        service: service.id,\n        operator\n      })\n\n      if (response.success && response.data) {\n        setSuccess(true)\n        setTimeout(() => {\n          onOrderComplete()\n        }, 1500)\n      } else {\n        setError(response.message || 'Failed to create order')\n      }\n    } catch {\n      setError('Failed to create order')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Card className=\"max-w-md mx-auto\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center justify-between\">\n          Order Confirmation\n          {success && <CheckCircle className=\"h-5 w-5 text-green-600\" />}\n        </CardTitle>\n        <CardDescription>\n          Review your order details before confirming\n        </CardDescription>\n      </CardHeader>\n\n      <CardContent className=\"space-y-4\">\n        <div className=\"space-y-3\">\n          <div className=\"flex justify-between items-center\">\n            <span className=\"font-medium\">Service:</span>\n            <span>{service.name}</span>\n          </div>\n\n          <div className=\"flex justify-between items-center\">\n            <span className=\"font-medium\">Service ID:</span>\n            <Badge variant=\"secondary\">{service.id}</Badge>\n          </div>\n\n          <div className=\"flex justify-between items-center\">\n            <span className=\"font-medium\">Operator:</span>\n            <Badge className={getOperatorColor(operator)}>\n              {operator.charAt(0).toUpperCase() + operator.slice(1)}\n            </Badge>\n          </div>\n\n          {service.pricing && (\n            <>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"font-medium\">Original Price:</span>\n                <span className=\"line-through text-gray-500\">\n                  {formatCurrency(service.pricing.original_price)}\n                </span>\n              </div>\n\n              <div className=\"flex justify-between items-center\">\n                <span className=\"font-medium\">Selling Price:</span>\n                <span className=\"text-lg font-bold text-green-600\">\n                  {formatCurrency(service.pricing.selling_price)}\n                </span>\n              </div>\n\n              <div className=\"flex justify-between items-center\">\n                <span className=\"font-medium\">Your Profit:</span>\n                <span className=\"font-bold text-green-600\">\n                  {formatCurrency(service.pricing.profit)}\n                </span>\n              </div>\n            </>\n          )}\n        </div>\n\n        {error && (\n          <div className=\"flex items-center p-3 bg-red-50 border border-red-200 rounded-md\">\n            <XCircle className=\"h-4 w-4 text-red-600 mr-2\" />\n            <span className=\"text-red-600 text-sm\">{error}</span>\n          </div>\n        )}\n\n        {success && (\n          <div className=\"flex items-center p-3 bg-green-50 border border-green-200 rounded-md\">\n            <CheckCircle className=\"h-4 w-4 text-green-600 mr-2\" />\n            <span className=\"text-green-600 text-sm\">Order created successfully!</span>\n          </div>\n        )}\n\n        <div className=\"flex space-x-3 pt-4\">\n          <Button\n            variant=\"outline\"\n            onClick={onCancel}\n            disabled={loading || success}\n            className=\"flex-1\"\n          >\n            Cancel\n          </Button>\n          \n          <Button\n            onClick={handleSubmitOrder}\n            disabled={loading || success}\n            className=\"flex-1\"\n          >\n            {loading && <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />}\n            {success ? 'Order Created!' : 'Confirm Order'}\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1396, "column": 0}, "map": {"version":3,"sources":["file:///workspace/frontend-chiro-store/src/components/orders-list.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Loader2, RefreshCw, Phone, MessageSquare, Clock, CheckCircle, XCircle, RotateCcw } from 'lucide-react'\nimport { apiService } from '@/lib/api'\nimport { Order, OrderStatus } from '@/types'\nimport { getStatusColor, getStatusText, getOperatorColor } from '@/lib/utils'\n\nexport function OrdersList() {\n  const [orders, setOrders] = useState<Order[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [updatingStatus, setUpdatingStatus] = useState<string | null>(null)\n\n  useEffect(() => {\n    loadOrders()\n  }, [])\n\n  const loadOrders = async () => {\n    try {\n      setLoading(true)\n      const response = await apiService.getActiveOrders()\n      \n      if (response.success && response.data) {\n        setOrders(Array.isArray(response.data) ? response.data : [])\n        setError(null)\n      } else {\n        setError(response.message || 'Failed to load orders')\n      }\n    } catch {\n      setError('Failed to load orders')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const updateOrderStatus = async (orderId: string, status: OrderStatus) => {\n    try {\n      setUpdatingStatus(orderId)\n      const response = await apiService.updateOrderStatus({ order_id: orderId, status })\n      \n      if (response.success) {\n        // Refresh orders after status update\n        await loadOrders()\n      } else {\n        setError(response.message || 'Failed to update order status')\n      }\n    } catch {\n      setError('Failed to update order status')\n    } finally {\n      setUpdatingStatus(null)\n    }\n  }\n\n  const getStatusIcon = (status: number) => {\n    switch (status) {\n      case 1:\n        return <Clock className=\"h-4 w-4\" />\n      case 2:\n        return <XCircle className=\"h-4 w-4\" />\n      case 3:\n        return <RotateCcw className=\"h-4 w-4\" />\n      case 4:\n        return <CheckCircle className=\"h-4 w-4\" />\n      default:\n        return <Clock className=\"h-4 w-4\" />\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center py-12\">\n        <Loader2 className=\"h-8 w-8 animate-spin\" />\n        <span className=\"ml-2\">Loading orders...</span>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"text-center py-12\">\n        <p className=\"text-red-600 mb-4\">{error}</p>\n        <Button onClick={loadOrders} variant=\"outline\">\n          <RefreshCw className=\"h-4 w-4 mr-2\" />\n          Try Again\n        </Button>\n      </div>\n    )\n  }\n\n  if (orders.length === 0) {\n    return (\n      <div className=\"text-center py-12\">\n        <MessageSquare className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Active Orders</h3>\n        <p className=\"text-gray-600 mb-4\">You don&apos;t have any active orders yet.</p>\n        <Button onClick={loadOrders} variant=\"outline\">\n          <RefreshCw className=\"h-4 w-4 mr-2\" />\n          Refresh\n        </Button>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-2xl font-bold\">Active Orders</h2>\n        <Button onClick={loadOrders} variant=\"outline\" size=\"sm\">\n          <RefreshCw className=\"h-4 w-4 mr-2\" />\n          Refresh\n        </Button>\n      </div>\n\n      <div className=\"grid gap-4\">\n        {orders.map((order) => (\n          <Card key={order.id || order.order_id} className=\"hover:shadow-md transition-shadow\">\n            <CardHeader>\n              <div className=\"flex items-center justify-between\">\n                <CardTitle className=\"text-lg\">\n                  Order #{order.id || order.order_id}\n                </CardTitle>\n                <Badge className={getStatusColor(order.status || 1)}>\n                  <div className=\"flex items-center\">\n                    {getStatusIcon(order.status || 1)}\n                    <span className=\"ml-1\">{getStatusText(order.status || 1)}</span>\n                  </div>\n                </Badge>\n              </div>\n              <CardDescription>\n                Service: {order.service}\n              </CardDescription>\n            </CardHeader>\n\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <span className=\"text-sm font-medium text-gray-600\">Operator:</span>\n                  <Badge className={`ml-2 ${getOperatorColor(order.operator)}`}>\n                    {order.operator.charAt(0).toUpperCase() + order.operator.slice(1)}\n                  </Badge>\n                </div>\n\n                {order.phone && (\n                  <div className=\"flex items-center\">\n                    <Phone className=\"h-4 w-4 text-gray-600 mr-2\" />\n                    <span className=\"font-mono\">{order.phone}</span>\n                  </div>\n                )}\n              </div>\n\n              {order.sms && (\n                <div className=\"p-3 bg-gray-50 rounded-md\">\n                  <div className=\"flex items-center mb-2\">\n                    <MessageSquare className=\"h-4 w-4 text-gray-600 mr-2\" />\n                    <span className=\"text-sm font-medium\">SMS Received:</span>\n                  </div>\n                  <p className=\"text-sm\">{order.sms}</p>\n                </div>\n              )}\n\n              <div className=\"flex items-center justify-between pt-4 border-t\">\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-sm font-medium\">Update Status:</span>\n                  <Select\n                    disabled={updatingStatus === (order.id || order.order_id)}\n                    onValueChange={(value) => updateOrderStatus(\n                      order.id || order.order_id || '', \n                      parseInt(value) as OrderStatus\n                    )}\n                  >\n                    <SelectTrigger className=\"w-32\">\n                      <SelectValue placeholder=\"Status\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"1\">Ready</SelectItem>\n                      <SelectItem value=\"2\">Cancel</SelectItem>\n                      <SelectItem value=\"3\">Resend</SelectItem>\n                      <SelectItem value=\"4\">Complete</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                {updatingStatus === (order.id || order.order_id) && (\n                  <div className=\"flex items-center text-sm text-gray-600\">\n                    <Loader2 className=\"h-4 w-4 animate-spin mr-2\" />\n                    Updating...\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1983, "column": 0}, "map": {"version":3,"sources":["file:///workspace/frontend-chiro-store/src/app/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { ServicesGrid } from '@/components/services-grid'\nimport { OrderForm } from '@/components/order-form'\nimport { OrdersList } from '@/components/orders-list'\nimport { Service, OperatorType } from '@/types'\nimport { Phone, ShoppingCart, List, TrendingUp, Zap, Shield, Clock } from 'lucide-react'\n\nexport default function Home() {\n  const [selectedService, setSelectedService] = useState<Service | null>(null)\n  const [selectedOperator, setSelectedOperator] = useState<OperatorType>('any')\n  const [showOrderForm, setShowOrderForm] = useState(false)\n\n  const handleOrderService = (service: Service, operator: OperatorType) => {\n    setSelectedService(service)\n    setSelectedOperator(operator)\n    setShowOrderForm(true)\n  }\n\n  const handleOrderComplete = () => {\n    setShowOrderForm(false)\n    setSelectedService(null)\n    // You could add a toast notification here\n  }\n\n  const handleCancelOrder = () => {\n    setShowOrderForm(false)\n    setSelectedService(null)\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100\">\n      {/* Header */}\n      <header className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center\">\n              <Phone className=\"h-8 w-8 text-blue-600 mr-3\" />\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-900\">ChiroStore</h1>\n                <p className=\"text-sm text-gray-600\">VirtuSIM Virtual Phone Numbers</p>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <Badge variant=\"outline\" className=\"text-green-600 border-green-600\">\n                <Zap className=\"h-3 w-3 mr-1\" />\n                Live API\n              </Badge>\n              <Badge variant=\"outline\" className=\"text-blue-600 border-blue-600\">\n                <Shield className=\"h-3 w-3 mr-1\" />\n                Secure\n              </Badge>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Hero Section */}\n      <section className=\"py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-7xl mx-auto text-center\">\n          <h2 className=\"text-4xl font-bold text-gray-900 mb-4\">\n            Professional Virtual Phone Numbers\n          </h2>\n          <p className=\"text-xl text-gray-600 mb-8 max-w-3xl mx-auto\">\n            Get instant access to virtual phone numbers from major Indonesian operators. \n            Perfect for SMS verification with transparent pricing and profit tracking.\n          </p>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 max-w-4xl mx-auto mb-12\">\n            <Card className=\"text-center\">\n              <CardHeader>\n                <TrendingUp className=\"h-8 w-8 text-green-600 mx-auto mb-2\" />\n                <CardTitle className=\"text-lg\">Profit Tracking</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-gray-600\">Real-time profit calculation with transparent markup system</p>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"text-center\">\n              <CardHeader>\n                <Clock className=\"h-8 w-8 text-blue-600 mx-auto mb-2\" />\n                <CardTitle className=\"text-lg\">Instant Delivery</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-gray-600\">Get your virtual number instantly with SMS forwarding</p>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"text-center\">\n              <CardHeader>\n                <Shield className=\"h-8 w-8 text-purple-600 mx-auto mb-2\" />\n                <CardTitle className=\"text-lg\">Multi-Operator</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-gray-600\">Support for Telkomsel, Indosat, Axis, and more</p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Main Content */}\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pb-12\">\n        {showOrderForm && selectedService ? (\n          <div className=\"mb-8\">\n            <OrderForm\n              service={selectedService}\n              operator={selectedOperator}\n              onOrderComplete={handleOrderComplete}\n              onCancel={handleCancelOrder}\n            />\n          </div>\n        ) : (\n          <Tabs defaultValue=\"services\" className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-2 max-w-md mx-auto\">\n              <TabsTrigger value=\"services\" className=\"flex items-center\">\n                <ShoppingCart className=\"h-4 w-4 mr-2\" />\n                Services\n              </TabsTrigger>\n              <TabsTrigger value=\"orders\" className=\"flex items-center\">\n                <List className=\"h-4 w-4 mr-2\" />\n                My Orders\n              </TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"services\" className=\"mt-8\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Available Services</CardTitle>\n                  <CardDescription>\n                    Choose from our wide range of virtual phone number services. \n                    All prices include our markup for your profit.\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <ServicesGrid onOrderService={handleOrderService} />\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"orders\" className=\"mt-8\">\n              <OrdersList />\n            </TabsContent>\n          </Tabs>\n        )}\n      </main>\n\n      {/* Footer */}\n      <footer className=\"bg-white border-t mt-12\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"text-center\">\n            <p className=\"text-gray-600\">\n              © 2025 ChiroStore. Powered by VirtuSIM API. Built with Next.js and Tailwind CSS.\n            </p>\n            <p className=\"text-sm text-gray-500 mt-2\">\n              Professional virtual phone number service for businesses and developers.\n            </p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}